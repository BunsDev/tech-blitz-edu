// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  //previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  //schemas           = ["public", "auth"]
}

enum userLevel {
  STANDARD
  ADMIN
  TRIAL
  FREE
}

// A user is a person who can log in to the application
// This will be responsible for all data related to the user
// profile and authentication.
// The user will also have a list of questions that they have answered,
// as well as a list of answers for the question.
model Users {
  uid   String  @id()
  email String  @unique
  name  String?

  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  lastLogin DateTime?

  userLevel userLevel @default(STANDARD)

  // A user can have many answers
  answers Answers[]
}

model Questions {
  uid          String   @id @default(cuid())
  question     String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt
  questionDate DateTime

  answers       QuestionAnswers[]
  correctAnswer String // the QuestionAnswersUid

  userAnswers    Answers[]
  answerResource String?
}

model QuestionAnswers {
  uid         String    @id @default(cuid())
  questionUid String
  question    Questions @relation(fields: [questionUid], references: [uid])
  answer      String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())
}

// An answer is a response to a question
// Each time a user tries to answer a question, an answer row is created
model Answers {
  uid           String    @id @default(cuid())
  userId        String
  questionId    String
  user          Users     @relation(fields: [userId], references: [uid])
  question      Questions @relation(fields: [questionId], references: [uid])
  userAnswerUid String
  correctAnswer Boolean   @default(false)
  createdAt     DateTime  @default(now())
  timeTaken     Int?
}
