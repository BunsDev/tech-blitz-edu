enum QuestionDifficulty {
  EASY
  MEDIUM
  HARD
}

model Questions {
  uid           String   @id @default(uuid())
  question      String
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt
  questionDate  String

  answers       QuestionAnswers[]
  correctAnswer String

  userAnswers    Answers[]
  answerResource String?

  codeSnippet    String?
  hint           String?

  dailyQuestion  Boolean @default(false)
  customQuestion Boolean @default(false) // Indicates if this is exclusive to a report

  tags           QuestionTags[]
  difficulty     QuestionDifficulty @default(EASY)

  // Relation to reports using this question (shared or custom)
  linkedReports StatisticsReport[] @relation("SharedQuestions")

  DemoAnswers DemoAnswers[]

  // Resources for this question
  QuestionResources QuestionResources[]

  // slug for the question - this is used for the URL and is better than the uid
  // for readability and seo
  slug String? @unique @default(uuid())
}

// Tags for this question
model Tag {
  uid       String         @id @default(uuid())
  name      String         @unique
  questions QuestionTags[]
}

// Junction table for the many-to-many relationship between Questions and Tags
model QuestionTags {
  question   Questions @relation(fields: [questionId], references: [uid], onDelete: Cascade)
  questionId String
  tag        Tag       @relation(fields: [tagId], references: [uid], onDelete: Cascade)
  tagId      String

  @@id([questionId, tagId])
  @@index([tagId])
  @@index([questionId])
}

// Answers for this question
model QuestionAnswers {
  uid         String    @id @default(cuid())
  questionUid String
  question    Questions @relation(fields: [questionUid], references: [uid], onDelete: Cascade, onUpdate: Cascade)
  answer      String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  isCodeSnippet Boolean   @default(false)
}

// user answers for this question
model Answers {
  uid       String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  userUid       String    @default("legacy_user")
  questionUid   String    @default("legacy_question")
  user          Users     @relation(fields: [userUid], references: [uid], onDelete: Cascade, onUpdate: Cascade)
  question      Questions @relation(fields: [questionUid], references: [uid], onDelete: Cascade, onUpdate: Cascade)
  userAnswerUid String
  correctAnswer Boolean   @default(false)
  questionDate  String    @default("")
  timeTaken     Int?
}

// Resources (learning resources) for this question
model QuestionResources {
  uid       String   @id @default(cuid())
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  questionUid String
  question    Questions @relation(fields: [questionUid], references: [uid], onDelete: Cascade, onUpdate: Cascade)
  resource    String
  title       String
}
